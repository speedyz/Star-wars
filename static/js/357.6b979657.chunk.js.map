{"version":3,"file":"static/js/357.6b979657.chunk.js","mappings":"6PACA,EAAuB,+BAAvB,EAA6D,+B,kBCA7D,GAAgB,OAAS,yBAAyB,KAAO,uBAAuB,MAAQ,wBAAwB,QAAU,2B,SCuB1H,EAViB,SAAC,GAAD,IAAEA,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAjB,IAA2BC,MAAAA,OAA3B,MAAiC,OAAjC,SACT,mBACIF,QAASA,EACTC,SAAUA,EACVE,UAAWC,IAAGC,EAAAA,OAAeA,EAAOH,IAHxC,SAIKH,K,SCgBb,EAtByB,SAAC,GAA2D,IAA1DO,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAQlDC,GAAUC,EAAAA,EAAAA,MAEhB,OACI,iBAAKR,UAAWE,EAAhB,WACI,SAAC,KAAD,CAAMF,UAAWE,EAAaO,GAAE,wBAAmBH,EAAc,GAAjE,UACI,SAAC,EAAD,CAAUV,KAAK,WAAWC,QARd,WACpBM,EAAYC,IAOgDN,UAAWM,EAAUL,MAAOQ,EAAQR,MAAOW,QAAQ,QAE3G,SAAC,KAAD,CAAMV,UAAWE,EAAaO,GAAE,wBAAmBH,EAAc,GAAjE,UACI,SAAC,EAAD,CAAUV,KAAK,OAAOC,QAdV,WACpBM,EAAYE,IAa4CP,UAAWO,EAAUN,MAAOQ,EAAQR,MAAOW,QAAQ,WCkCnH,GAAeC,EAAAA,EAAAA,IA7CI,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAEjB,GAA4BC,EAAAA,EAAAA,UAAgB,IAA5C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCF,EAAAA,EAAAA,YAAhC,eAAOT,EAAP,KAAiBY,EAAjB,KACA,GAAgCH,EAAAA,EAAAA,YAAhC,eAAOR,EAAP,KAAiBY,EAAjB,KACA,GAAsCJ,EAAAA,EAAAA,UAAiB,GAAvD,eAAOP,EAAP,KAAoBY,EAApB,KAEMC,ECtBC,IAAKC,iBAAgBC,EAAAA,EAAAA,MAAcC,QDsBlBC,IAAI,QAEtBpB,EAAW,yCAAG,WAAOqB,GAAP,+FACGC,EAAAA,EAAAA,GAAeD,GADlB,QACVE,EADU,SAGNC,EAAaD,EAAKE,QAAQC,KAAI,YAAyB,IAAvBC,EAAsB,EAAtBA,KAAMN,EAAgB,EAAhBA,IAClCO,GAAKC,EAAAA,EAAAA,IAAYR,GAEvB,MAAO,CACHO,GAAAA,EACAE,KAHQC,EAAAA,EAAAA,IAAeH,GAIvBD,KAAAA,MAGRd,EAAYU,EAAKS,UACjBlB,EAAYS,EAAKU,MACjBlB,GAAemB,EAAAA,EAAAA,IAAgBb,IAC/BT,EAAUY,GACVf,GAAY,IAEZA,GAAY,GAlBA,2CAAH,sDAyBjB,OAHA0B,EAAAA,EAAAA,YAAU,WACNnC,EAAYoC,EAAAA,GAAapB,GAAWqB,SACrC,KAEC,gCACK1B,IACG,SAAC2B,EAAA,EAAD,CAAY3B,OAAQA,EAAQgB,KAAM,GAAIC,GAAI,EAAGE,IAAK,MAEtD,SAAC,EAAD,CAAkB9B,YAAaA,EAAaC,SAAUA,EAAUC,SAAUA,EACxDC,YAAaA","sources":["webpack://star-wars/./src/components/PeoplePage/PeopleNavigation/PeopleNavigation.module.css?d843","webpack://star-wars/./src/components/UI/UiButton/UiButton.module.css?3143","components/UI/UiButton/UiButton.tsx","components/PeoplePage/PeopleNavigation/PeopleNavigation.tsx","containers/PeoplePage/PeoplePage.tsx","hooks/useQueryParams.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PeopleNavigation_root__5KZNz\",\"link\":\"PeopleNavigation_link__pN7JA\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"UiButton_button__bM1tM\",\"dark\":\"UiButton_dark__FvMsy\",\"light\":\"UiButton_light__s1sOL\",\"neutral\":\"UiButton_neutral__AITNf\"};","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport '../index.css'\r\nimport styles from './UiButton.module.css'\r\n\r\ntype Props = {\r\n    text: string,\r\n    onClick: any,\r\n    disabled: boolean,\r\n    theme: string,\r\n    classes: string,\r\n}\r\n\r\nconst UiButton = ({text, onClick, disabled, theme='dark'}: Props) =>  (\r\n        <button\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            className={cn(styles.button, styles[theme])}>\r\n            {text}\r\n        </button>\r\n    );\r\n\r\n\r\nexport default UiButton;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './PeopleNavigation.module.css'\r\nimport UiButton from \"../../UI/UiButton\";\r\nimport {useTheme} from \"../../../context/ThemeProvider\";\r\n\r\ntype Props = {\r\n    getResource: any,\r\n    prevPage: any,\r\n    nextPage: any;\r\n    counterPage: number,\r\n}\r\n\r\nconst PeopleNavigation = ({getResource, prevPage, nextPage, counterPage}: Props) => {\r\n\r\n    const handeChangeNext = () => {\r\n        getResource(nextPage)\r\n    }\r\n    const handeChangePrev = () => {\r\n        getResource(prevPage)\r\n    }\r\n    const isTheme = useTheme();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <Link className={styles.link} to={`/people/?page=${counterPage - 1}`}>\r\n                <UiButton text=\"Previous\" onClick={handeChangePrev} disabled={!prevPage} theme={isTheme.theme} classes=\"\"/>\r\n            </Link>\r\n            <Link className={styles.link} to={`/people/?page=${counterPage + 1}`}>\r\n                <UiButton text=\"Next\" onClick={handeChangeNext} disabled={!nextPage} theme={isTheme.theme} classes=\"\"/>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleNavigation;","import React, {useEffect, useState} from 'react';\r\n\r\nimport {getApiResource} from \"../../utils/network\";\r\nimport {withErrorApi} from \"../../hoc/withErrorApi\";\r\nimport {getPeopleID, getPeopleImage, getPeoplePageID} from \"../../services/getPeopleData\";\r\n\r\nimport {API_PEOPLE} from \"../../constants/api\";\r\nimport {useQueryParams} from \"../../hooks/useQueryParams\";\r\nimport PeopleList from \"../../components/PeoplePage/PeopleList\";\r\nimport PeopleNavigation from \"../../components/PeoplePage/PeopleNavigation\";\r\n\r\n\r\ntype Props = {\r\n    name: string,\r\n    url: string,\r\n    setErrorAPI: any;\r\n}\r\n\r\nconst PeoplePage = ({setErrorAPI}: Props) => {\r\n\r\n    const [people, setPeople] = useState<any[]>([])\r\n    const [prevPage, setPrevPage] = useState<string>()\r\n    const [nextPage, setNextPage] = useState<string>()\r\n    const [counterPage, setCounterPage] = useState<number>(1)\r\n    const query = useQueryParams();\r\n    const queryPage = query.get('page')\r\n\r\n    const getResource = async (url: string) => {\r\n        const body = await getApiResource(url);\r\n        if (body) {\r\n            const peopleList = body.results.map(({name, url}: Props) => {\r\n                const id = getPeopleID(url)\r\n                const img = getPeopleImage(id);\r\n                return {\r\n                    id,\r\n                    img,\r\n                    name,\r\n                }\r\n            })\r\n            setPrevPage(body.previous);\r\n            setNextPage(body.next);\r\n            setCounterPage(getPeoplePageID(url))\r\n            setPeople(peopleList)\r\n            setErrorAPI(false);\r\n        } else {\r\n            setErrorAPI(true)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getResource(API_PEOPLE + queryPage).then()\r\n    }, []);\r\n    return (\r\n        <>\r\n            {people && (\r\n                <PeopleList people={people} name={''} id={1} img={''}/>\r\n            )}\r\n            <PeopleNavigation getResource={getResource} prevPage={prevPage} nextPage={nextPage}\r\n                              counterPage={counterPage}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withErrorApi(PeoplePage);\r\n\r\n","import {useLocation} from \"react-router\";\r\n\r\nexport const useQueryParams = () => {\r\n    return new  URLSearchParams(useLocation().search);\r\n}"],"names":["text","onClick","disabled","theme","className","cn","styles","getResource","prevPage","nextPage","counterPage","isTheme","useTheme","to","classes","withErrorApi","setErrorAPI","useState","people","setPeople","setPrevPage","setNextPage","setCounterPage","queryPage","URLSearchParams","useLocation","search","get","url","getApiResource","body","peopleList","results","map","name","id","getPeopleID","img","getPeopleImage","previous","next","getPeoplePageID","useEffect","API_PEOPLE","then","PeopleList"],"sourceRoot":""}